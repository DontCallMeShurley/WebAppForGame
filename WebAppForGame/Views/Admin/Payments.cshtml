@using WebAppForGame.Data
@using DevExtreme.AspNet.Mvc;

@{
    Layout = "_Layout";
    ViewBag.currentLayer = 2;
}
<main>
    <div class="header">
        <div class="left">
            <h1>Заказы</h1>
            <ul class="breadcrumb">
                <li>
                    <a href="/Admin">
                        Admin
                    </a>
                </li>
                /
                <li><a href="/Products" class="active">Products</a></li>
            </ul>
        </div>
    </div>
    <br />
    <div id="data">
        @(
                Html.DevExtreme().DataGrid<Payments>()
                .ID("gridContainer")
                .ShowBorders(false)
                .FilterRow(filterRow => filterRow
                .Visible(true)
                .ApplyFilter(GridApplyFilterMode.Auto)
                )
                .SearchPanel(searchPanel => searchPanel
                .Visible(true)
                .Width(240)
                .Placeholder("Поиск...")
                )
                .Editing(editing =>
                {
                    editing.Mode(GridEditMode.Row);
                    editing.AllowDeleting(true);
                    editing.UseIcons(true);
                })
                .ColumnAutoWidth(true)
                .ColumnHidingEnabled(true)
                .Selection(selection =>
                {
                    selection.Mode(SelectionMode.Multiple);
                    selection.SelectAllMode(SelectAllMode.Page);
                })
                .OnSelectionChanged("onSelectionChanged")
                .Paging(paging => paging.PageSize(10))
                .Pager(pager =>
                {
                    pager.Visible(true);
                    pager.DisplayMode(GridPagerDisplayMode.Full);
                    pager.ShowPageSizeSelector(true);
                    pager.AllowedPageSizes(new JS("[10, 20, 'all']"));
                    pager.ShowInfo(true);
                    pager.ShowNavigationButtons(true);
                })
                .RemoteOperations(true)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.UserID);

                    columns.AddFor(m => m.Date).DataType(GridColumnDataType.DateTime).SortOrder(SortOrder.Desc);

                    columns.AddFor(m => m.PaymentId);

                    columns.AddFor(m => m.Product.Name).Caption("Товар");

                    columns.AddFor(m => m.Product.Amount).Format(f => f
                .Type(Format.Currency)
                .Currency("RUB")
                ).Caption("Сумма");

                    columns.AddFor(m => m.PaymentStatus);

                })
                .Toolbar(toolbar =>
                {
                    toolbar.Items(items =>
                {
                    items.Add()
                .Location(ToolbarItemLocation.After)
                .Widget(w =>
                w.Button()
                .Text("Удалить выбранные записи")
                .Icon("trash")
                .Disabled(true)
                .OnClick("onDeleteBtnClick")
                );
                });
                })
                .Summary(s => s.TotalItems(items =>
                {
                    items.AddFor(m => m.UserID)
                .SummaryType(SummaryType.Count);

                    items.AddFor(m => m.Date)
                .SummaryType(SummaryType.Max)
                .CustomizeText(@<text>
                    function(data) { return "Последний: " + formatDate(data.value); }
                </text>);

                    items.AddFor(m => m.Product.Amount)
            .SummaryType(SummaryType.Sum)
            .ValueFormat(f => f.Type(Format.Currency).Currency("RUB"));
                })
            )
            .DataSource(ds => ds.Mvc()
            .Controller("Payments")
            .LoadAction("Get")
            .DeleteAction("Delete")
            .Key("Id")
            )
            )
    </div>
</main>
<script>
    var formatDate = new Intl.DateTimeFormat("ru-RU", { year: "numeric", month: "short", day: "numeric", hour: "numeric", minute: "numeric", second: "numeric" }).format;
    function onDeleteBtnClick() {
        var result = DevExpress.ui.dialog.confirm("Удалить выбранные записи?", "Потвердить");
        result.done(function (dialogResult) {
            if (!dialogResult)
                return;
            let dataGrid = $("#gridContainer").dxDataGrid("instance");
            dataGrid.getSelectedRowKeys().forEach((key) => {
                dataGrid.getDataSource().store().remove(key);

            });
            dataGrid.clearSelection();
            dataGrid.getDataSource().reload();
            return;
        });
    }
    function onSelectionChanged(data) {
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("toolbar.items[0].options.disabled", !data.selectedRowsData.length);
    }
</script>
